source_completion(){
  [[ -f /etc/bash_completion ]] && ! shopt -oq posix && . /etc/bash_completion
}


create_local_opt() {
  [[ -d "${local_opt}" ]] || mkdir -p "${local_opt}"
}


add_opt_liquidprompt() {
  local liquidprompt_source="${local_opt}/liquidprompt/liquidprompt"
  [[ -f "${liquidprompt_source}" ]] || \
  git clone --depth 1 \
    https://github.com/nojhan/liquidprompt.git "${liquidprompt_source%/*}"
  source "${liquidprompt_source}"
}


add_opt_fzf() {
  case "${1}" in
    bash|'')
      local no_shell=zsh
      local fzf_dot='bash'
      ;;
    zsh)
      local no_shell=bash
      local fzf_dot='zsh'
      ;;
    *)
      return 1
      ;;
  esac
  local fzf_git_url='https://github.com/junegunn/fzf.git'
  local fzf_source="${local_opt}/fzf"
  local fzf_config="${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.${fzf_dot}

  [[ -d "${fzf_source}" ]] || git clone --depth 1 ${fzf_git_url} "${fzf_source}"
  [[ ! -e "${fzf_config}" ]] && \
  echo n | ${fzf_source}/install --xdg \
                                 --key-bindings \
                                 --completion \
                                 --no-fish \
                                 --no-${no_shell}
  source "${fzf_config}"
}


# update only $this repo
update_repo() {
  for source in "$@".list; do
    sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/${source}" \
                        -o Dir::Etc::sourceparts="-" \
                        -o APT::Get::List-Cleanup="0"
  done
}


# courtsey of grml
R() {
  exec $SHELL $SHELL_ARGS "$@"
}

# send git diff to remote server
gdiffr() {
  host="${1}"
  git diff | ssh "${host}" 'cat - >/tmp/.gdiffr'
}

# purge unused kernels and headers
unuker() {
 kv=$(uname -r|awk -F- '{print $1"-"$2}')
 sudo aptitude purge \
 "?installed?or(linux-headers-[0-9],linux-image-[0-9]) ?installed?not(${kv})"
}


sshL() {
  # 43:whois.arin.net:43
  remotehost=$1
  localport=$2
  remoteport=$3
  [[ -z ${remoteport} ]] && remoteport="${localport}"
  sudo ssh -nfL "${localport}:${remotehost}:${remoteport}" \
           -F $HOME/.ssh/config \
           "${using}"
}


sshR() {
  localport=$1
  remoteport=$2
  [[ -z ${remoteport} ]] && remoteport="0"
  sudo ssh -R "${remoteport}:localhost:${localport}" \
           -F $HOME/.ssh/config \
           "${using}" 2>&1 >/dev/null | \
       awk '/^Allocated/ {print $3}'
}


wgetr() {
  wget --no-directories --recursive --level=1 --execute robots=off "${1}"
}


# debian
updg() {
       sudo -- sh -c 'apt update && apt upgrade -y && apt autoremove -y && apt clean'
}

# cheat.sh
cheat() {
  curl cheat.sh/"$1"
}

p() {
  addr="$1.$1.$1.$1"
  shift
  ping $@ $addr
}

# change up n dirs
# https://www.commandlinefu.com/commands/view/10751/quickly-cd-out-of-directories-without-5-aliases
up() { local x='';for i in $(seq ${1:-1});do x="$x../"; done;cd $x; }

# move currently playing song
mvq() {
  set -x
  title=$(quodlibet --print-playing '<title>')
  filename=$(quodlibet --print-query="${title}"|tail -1)
  mv "${filename}"  .
  set +x
}

# media
youtube_mp3() {
  yt-dlp \
  -f ba \
  -audio \
  -format mp3 \
  -quality 0 $1 &>/dev/null |
  tail -3
}

mp3it() {
  ffmpeg -i $1 -vn -ar 44100 -ac 2 -b:a 192k $2
}

ytp() {
  yt-dlp -f ba -x --audio-format mp3 -o - "${1}" | ffplay -nodisp -autoexit -i -
}

ytpv() {
  yt-dlp -f ba -x --audio-format mp3 -o - "${1}" | mpv -
}